{"version":3,"sources":["firebase.js","Todo.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Todo","useState","input","setInput","updateInput","setUpdateInput","todo","setTodo","db","firestore","useEffect","collection","onSnapshot","item","docs","map","doc","id","name","data","Container","className","Row","Col","onSubmit","e","preventDefault","add","Form","Control","type","value","onChange","target","placeholder","Button","variant","Table","striped","bordered","hover","style","width","color","onClick","delete","set","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAYAA,IAASC,cATY,CACnBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,8CAKMP,QAAf,E,eCuGeQ,MA/Gf,WAAiB,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAEwBF,mBAAS,IAFjC,mBAEPG,EAFO,KAEMC,EAFN,OAGUJ,mBAAS,IAHnB,mBAGPK,EAHO,KAGDC,EAHC,KAIRC,EAAKhB,EAASiB,YAsCpB,OAzBAC,qBAAU,WAVRF,EAAGG,WAAW,SAASC,YAAW,SAAUC,GAC1CN,EACEM,EAAKC,KAAKC,KAAI,SAACC,GAAD,mBAAC,eACVA,GADS,IAEZC,GAAID,EAAIC,GACRC,KAAMF,EAAIG,OAAOD,gBAOtB,IAwBD,8BACE,eAACE,EAAA,EAAD,CAAWC,UAAU,OAArB,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,oBAAIF,UAAU,cAAd,uBACA,uBAAMG,SA3BG,SAACC,GAClBA,EAAEC,iBACY,KAAVxB,GACFM,EAAGG,WAAW,SAASgB,IAAI,CACzBT,KAAMhB,IAIVC,EAAS,KAmBD,UACE,cAACyB,EAAA,EAAKC,QAAN,CACER,UAAU,SACVS,KAAK,OACLC,MAAO7B,EACP8B,SAAU,SAACP,GAAD,OAAOtB,EAASsB,EAAEQ,OAAOF,QACnCG,YAAY,iBAEd,cAACC,EAAA,EAAD,CAAQL,KAAK,SAASM,QAAQ,UAA9B,8BAON,eAACC,EAAA,EAAD,CACEhB,UAAU,2BACViB,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLJ,QAAQ,OALV,UAOE,gCACE,+BACE,oCACA,oBAAIK,MAAO,CAAEC,MAAO,OAApB,uBACA,6CACA,kDAGJ,gCACGpC,EAAKS,KAAI,SAACI,GAAD,OACR,+BACE,6BAAKA,EAAKF,KACV,oBAAIwB,MAAO,CAAEE,MAAO,SAApB,SAAgCxB,EAAKD,OACrC,6BACE,cAACiB,EAAA,EAAD,CAAQC,QAAQ,SAASQ,QAAS,kBArD9B3B,EAqD+CE,EAAKF,QApDtET,EAAGG,WAAW,SAASK,IAAIC,GAAI4B,SADd,IAAC5B,GAqDJ,2BAIF,+BACE,uBACEa,KAAK,OACLI,YAAaf,EAAKD,KAClBc,SAAU,SAACP,GAAD,OAAOpB,EAAeoB,EAAEQ,OAAOF,UAE3C,cAACI,EAAA,EAAD,CACEd,UAAU,kBACVe,QAAQ,UACRQ,QAAS,kBA/DP3B,EA+DwBE,EAAKF,QA9D3B,KAAhBb,EACFI,EAAGG,WAAW,SAASK,IAAIC,GAAI6B,IAAI,CAAE5B,KAAMd,IAE3C2C,MAAM,mBAJS,IAAC9B,GA4DJ,8BAdKE,EAAKF,kBClF5B+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f7bc61e3.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyC7EPDgkRy7_IDeUw-5DfxszvUga646LVA\",\r\n  authDomain: \"todo-bootstrap-74709.firebaseapp.com\",\r\n  projectId: \"todo-bootstrap-74709\",\r\n  storageBucket: \"todo-bootstrap-74709.appspot.com\",\r\n  messagingSenderId: \"774503713940\",\r\n  appId: \"1:774503713940:web:0e899c600888c8a9c97881\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { Row, Container, Col, Form, Table } from \"react-bootstrap\";\r\nimport firebase from \"./firebase\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction Todo() {\r\n  const [input, setInput] = useState(\"\");\r\n  const [updateInput, setUpdateInput] = useState(\"\");\r\n  const [todo, setTodo] = useState([]);\r\n  const db = firebase.firestore();\r\n\r\n  const fetchData = () => {\r\n    db.collection(\"tasks\").onSnapshot(function (item) {\r\n      setTodo(\r\n        item.docs.map((doc) => ({\r\n          ...doc,\r\n          id: doc.id,\r\n          name: doc.data().name,\r\n        }))\r\n      );\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const createTodo = (e) => {\r\n    e.preventDefault();\r\n    if (input !== \"\") {\r\n      db.collection(\"tasks\").add({\r\n        name: input,\r\n      });\r\n    }\r\n\r\n    setInput(\"\");\r\n  };\r\n  const deleteTodo = (id) => {\r\n    db.collection(\"tasks\").doc(id).delete();\r\n  };\r\n  const updateTodo = (id) => {\r\n    if (updateInput !== \"\") {\r\n      db.collection(\"tasks\").doc(id).set({ name: updateInput });\r\n    } else {\r\n      alert(\"type Something\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"my-5\">\r\n        <Row>\r\n          <Col>\r\n            <h2 className=\"text-center\">Add NOTES</h2>\r\n            <form onSubmit={createTodo}>\r\n              <Form.Control\r\n                className=\"my-3  \"\r\n                type=\"text\"\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                placeholder=\"ADD TASK....\"\r\n              />\r\n              <Button type=\"submit\" variant=\"primary\">\r\n                ADD TASK\r\n              </Button>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Table\r\n          className=\"mt-4 shadow-lg p-3 mb-5 \"\r\n          striped\r\n          bordered\r\n          hover\r\n          variant=\"dark\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th style={{ width: \"20%\" }}>TASK Name</th>\r\n              <th>DELETE TASK</th>\r\n              <th>UPDATE TASK</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {todo.map((data) => (\r\n              <tr key={data.id}>\r\n                <td>{data.id}</td>\r\n                <td style={{ color: \"white\" }}>{data.name}</td>\r\n                <td>\r\n                  <Button variant=\"danger\" onClick={() => deleteTodo(data.id)}>\r\n                    DELETE TASK\r\n                  </Button>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder={data.name}\r\n                    onChange={(e) => setUpdateInput(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    className=\"text-white ml-4\"\r\n                    variant=\"warning\"\r\n                    onClick={() => updateTodo(data.id)}\r\n                  >\r\n                    UPDATE TASK\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import App from \"./App\";\nimport Todo from \"./Todo\";\nReactDOM.render(\n  <React.StrictMode>\n    <Todo />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}